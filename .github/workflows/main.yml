name: main

on: push

jobs:
  build-iosevka:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ env.IOSEVKA_VERSION }}
    steps:
      - name: Fetch latest release
        uses: octokit/request-action@v2.x
        id: fetch_latest_release
        with:
          route: GET /repos/be5invis/Iosevka/releases/latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Parse version from release tag
        run: echo IOSEVKA_VERSION=$(echo ${{ fromJson(steps.fetch_latest_release.outputs.data).tag_name }} | sed 's/^v//') >> $GITHUB_ENV
      - name: Checkout latest release
        uses: actions/checkout@v2
        with:
          repository: be5invis/Iosevka
          ref: v${{ env.IOSEVKA_VERSION }}
      - name: Download private build plan
        run: curl -fsSLO "https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/src/private-build-plans.toml"
      - name: Setup cache
        uses: actions/cache@v2
        id: cache
        with:
          path: dist/iosevka-custom
          key: ${{ env.IOSEVKA_VERSION }}-${{ hashFiles('private-build-plans.toml') }}
      - name: Setup nodejs
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - name: Install npm dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Install ttfautohint
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo apt-get install ttfautohint -y
      - name: Build font
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm run build -- ttf::iosevka-custom
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: iosevka-custom
          path: dist/iosevka-custom/ttf
      - name: Summary
        run: tree dist/iosevka-custom

  release-iosevka:
    runs-on: ubuntu-latest
    needs: build-iosevka
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: iosevka-custom
          path: iosevka-custom
      - name: Create release archives
        run: cd iosevka-custom && zip -r ../ttf-iosevka-custom.zip .
      - name: Create and upload release
        uses: softprops/action-gh-release@v1
        with:
          name: Iosevka Custom ${{ needs.build-iosevka.outputs.version }}
          tag_name: ${{ needs.build-iosevka.outputs.version }}
          files: ttf-iosevka-custom.zip

  patch-iosevka-unix:
    runs-on: ubuntu-latest
    needs: build-iosevka
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: iosevka-custom
          path: unpatched
      - name: Patch fonts
        run: docker run -v ${{ github.workspace }}/unpatched:/in -v ${{ github.workspace }}/patched:/out nerdfonts/patcher -q -c || true
      - name: Create release archives
        run: cd patched && zip -r ../ttf-iosevka-custom-nf.zip .
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: Iosevka Custom ${{ needs.build-iosevka.outputs.version }}
          tag_name: ${{ needs.build-iosevka.outputs.version }}
          files: ttf-iosevka-custom-nf.zip

  patch-iosevka-windows:
    runs-on: ubuntu-latest
    needs: build-iosevka
    steps:
      - name: Setup dependencies
        run: |
          sudo apt-get install fontforge python3 python3-pip python-is-python3 -y;
          pip install configparser
      - name: Checkout nerdfonts repo
        uses: actions/checkout@v2
        with:
          repository: ryanoasis/nerd-fonts
          ref: feature/allow-downscaling-nonmono
      - name: Download patch
        run: curl -fsSL "https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}/src/font-patcher-patch.diff" -o font-patcher.patch
      - name: Apply patch
        run: git apply ./font-patcher.patch
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: iosevka-custom
          path: unpatched
      - name: Create out dir
        run: mkdir -p patched
      - name: Patch fonts
        run: for f in unpatched/*.ttf; do [ -f "$f" ] && fontforge -script ./font-patcher -out ./patched -q -c -w "$f"; done
      - name: Create release archives
        run: cd patched && zip -r ../ttf-iosevka-custom-nf-windows.zip .
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: Iosevka Custom ${{ needs.build-iosevka.outputs.version }}
          tag_name: ${{ needs.build-iosevka.outputs.version }}
          files: ttf-iosevka-custom-nf-windows.zip
